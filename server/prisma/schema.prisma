// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  contacts  Contact[]

  @@map("users")
}

model Contact {
  id             Int          @id @default(autoincrement())
  name           String
  primaryEmail   String       @map("primary_email")
  secondaryEmail String?      @map("secondary_email")
  primaryPhone   String?      @map("primary_phone")
  secondaryPhone String?      @map("secondary_phone")
  company        String?
  industry       String?
  website        String?
  address        String?
  source         String?
  status         Status
  notes          String?
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  user           User         @relation(fields: [userId], references: [id])
  userId         Int          @map("user_id")
  touchpoints    Touchpoint[]

  @@map("contacts")
}

model Touchpoint {
  id         Int             @id @default(autoincrement())
  note       String
  source     TouchpointSource @default(MANUAL)
  contact    Contact         @relation(fields: [contactId], references: [id])
  contactId  Int             @map("contact_id")
  createdAt  DateTime        @default(now()) @map("created_at")

  @@map("touchpoints")
}

model Event {
  id               Int                @id @default(autoincrement())
  eventDate        DateTime?          @map("event_date")
  eventName        String?            @map("event_name")
  eventAddress     String?            @map("event_address")
  eventType        String?            @map("event_type")
  eventDescription String?            @map("event_description")
  eventCapacity    Int?               @map("event_capacity")
  eventStatus      String?            @map("event_status")
  createdAt        DateTime           @default(now()) @map("dt")
  updatedAt        DateTime           @default(now()) @updatedAt @map("dt_updated")
  participants     EventParticipant[]

  @@map("events")
}

model EventParticipant {
  id          Int      @id @default(autoincrement())
  eventId     Int?     @map("event_id")
  fullName    String?  @map("full_name")
  email       String?
  phone       String?
  companyName String?  @map("company_name")
  website     String?
  notes       String?
  createdAt   DateTime @default(now()) @map("dt")
  updatedAt   DateTime @default(now()) @updatedAt @map("dt_updated")
  event       Event?   @relation(fields: [eventId], references: [id])

  @@map("event_participants")
}

enum Status {
  PROSPECTS
  QUALIFIED_LEADS
  OPPORTUNITIES
  CONVERTED_CLIENTS
  DISQUALIFIED_LEADS
  DECLINED_OPPORTUNITIES
  CHURNED_CLIENTS

  @@map("status")
}

enum TouchpointSource {
  MANUAL
  EMAIL
  SMS
  PHONE
  IN_PERSON
  EVENT
  OTHER

  @@map("touchpoint_source")
}
